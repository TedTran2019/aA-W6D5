React: Facebook proj. to develop a version of PHP that could defend against
XSS(cross-site scripting) attacks. This ver. of PHP called XHP integrated
XML-like language to properly escape malicious code.
- condense entire PHP elements into single HTML-like tags
- performance for DOM manipulation was terrible
- decided to use creative elements of PHP into a JS library
	a. XML-like syntax and use of tags
- React: efficiency at updating DOM, lifecycle methods, differential algo to
	identify what needed to be updated
React : open source since 2013, one of the most popular like Angular.

SPA - single page app, only one backend route that renders HTML. To interact
w/ DB, utilizes async ajax requests

Virtual DOM - simpler and faster abstraction of HTML DOM, can traverse and
perform costly operations on virtual DOM prevents costly interactions w/
the real one, only updating when it absolutely needs to

Diffing Algorithm - when rendering, React creates a tree of React eles. When
state or props update, renders tree of potentially diff. elements. This algo
shows how to eficiently update the DOM, removing old nodes and replacing.
HTML elements are given unique IDs so algo can tell them apart. Solves problems
of generating fewest # of operations to re-render, O(N) time.

JSX - syntactic sugar for React.createElement(component, props, ...children)
Babel to transpile JSX into JS -> remember that JSX isn't mandatory, just makes
life easier!

Enzyme and Jest - Enzyme: testing library by Airbnb to compare React outputs,
utilizes shallow rendering to test single components. Used with Jest: framework
by FB for running tests on React code, similar to Jasmine (JS testing framework)
and RSPEC.

jQuery -> most popular, easier to manipulate DOM/handle events/AJAX requests.
w/ React, just worry about updating state

Vue -> new open source, big improvements in speed relative to React. Much
smaller comunity and lacks many libraries like React.

Angular -> maintained by Google, part of MEAN stack, framework not a library
like React. MVVM (MOdel-View-ViewModel)

Ember - Framework, development is slow.

React Native -> React components to develop mobile apps in JS.
----------------------------------------------------------------------------
NPM -> node package manager
- configuration process for automating node module installation for apps that
	have multiple JS dependencies
	a. npm init -y
	b. npm install <package_name> , e.g npm install react redux
		- installs react and redux
	c. inside package.json, write down dependencies
	d. npm install

- Recall diff between bundle exec some_command vs some_command, Gemfile ver. vs
	local ver
- add scripts for packages used, then can use npm run <package_name> to ensure
	the package.json ver is run

Webpack Config
- .gitignore -> https://github.com/github/gitignore
	a. usually node_modules, bundle.js, bundle.js.map are ignored
- webpack.config.js and export a single object, inside root dir
	a. for Rails projects, bundle.js in app/assets/javascripts
- webpack.config.js accepts a devtool key to enable useful tools, particularly
	source-map -> see line # in orig code when errors are raised
- also accepts resolve key, specify what file extensions to process, remember to
	include * to allow explicit extensions
- https://open.appacademy.io/learn/full-stack-online/react/webpack -> Look at
	how the sample was done!

ES6 Syntax: Object Destructuring
- extract parts of object and assign to diff vars
- works for nested properties as well
- works on funcs/vars that returns obj
- much easier to extract values, esp if keeping same name
- can easily be used as parameters, takes exactly what it needs

ES6: Import / Export
- export rather than module.exports
- can refer to by name and export all at once inside {}, or do as writing
	by prepending export
- to export a single obj, use export default
- import instead of require
	- import Etc from 'path'
- or can do import {etc, etc} from 'path', braces only necessary w/ multiple imports
- It's basically obj destructuring!
- can give default unnamed exports any name when importing
- named exports, import names must exactly match
- to grab all exports, use import * as etc from 'path'
- alias with as is necessary to refer to it later!

React Developer Tools:
- debugging React is hard
- dev tools are easy to install/no setup
- React Developer tools!
	a. inspect component, looking at props/state
	b. change component's state from console
	c. compare component to HTML it generates in Elements tab
https://github.com/facebook/react

https://reactjs.org/docs/thinking-in-react.html
Start w/ mock!
1. Break UI into component hierarchy
	a. draw boxes around every component/sub-component and give names
	b. same tech for new function/obj-- single responsibility principle
	c. arrange in hierarchy!
2. Build static version in React
	a. components that reuse other components/pass data using props
		- props are a way of passing data from parent to child
		- don't use state at all to build static version, reserved for interactivity
